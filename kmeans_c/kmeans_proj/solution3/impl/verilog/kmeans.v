// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="kmeans,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.428875,HLS_SYN_LAT=272,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=0,HLS_SYN_FF=1439,HLS_SYN_LUT=2905,HLS_VERSION=2020_1}" *)

module kmeans (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        centroids_x_V_address0,
        centroids_x_V_ce0,
        centroids_x_V_we0,
        centroids_x_V_d0,
        centroids_x_V_q0,
        centroids_x_V_address1,
        centroids_x_V_ce1,
        centroids_x_V_we1,
        centroids_x_V_d1,
        centroids_x_V_q1,
        centroids_y_V_address0,
        centroids_y_V_ce0,
        centroids_y_V_we0,
        centroids_y_V_d0,
        centroids_y_V_q0,
        centroids_y_V_address1,
        centroids_y_V_ce1,
        centroids_y_V_we1,
        centroids_y_V_d1,
        centroids_y_V_q1
);

parameter    ap_ST_fsm_state1 = 35'd1;
parameter    ap_ST_fsm_state2 = 35'd2;
parameter    ap_ST_fsm_state3 = 35'd4;
parameter    ap_ST_fsm_state4 = 35'd8;
parameter    ap_ST_fsm_state5 = 35'd16;
parameter    ap_ST_fsm_state6 = 35'd32;
parameter    ap_ST_fsm_state7 = 35'd64;
parameter    ap_ST_fsm_state8 = 35'd128;
parameter    ap_ST_fsm_state9 = 35'd256;
parameter    ap_ST_fsm_state10 = 35'd512;
parameter    ap_ST_fsm_state11 = 35'd1024;
parameter    ap_ST_fsm_state12 = 35'd2048;
parameter    ap_ST_fsm_state13 = 35'd4096;
parameter    ap_ST_fsm_state14 = 35'd8192;
parameter    ap_ST_fsm_state15 = 35'd16384;
parameter    ap_ST_fsm_state16 = 35'd32768;
parameter    ap_ST_fsm_state17 = 35'd65536;
parameter    ap_ST_fsm_state18 = 35'd131072;
parameter    ap_ST_fsm_state19 = 35'd262144;
parameter    ap_ST_fsm_state20 = 35'd524288;
parameter    ap_ST_fsm_state21 = 35'd1048576;
parameter    ap_ST_fsm_state22 = 35'd2097152;
parameter    ap_ST_fsm_state23 = 35'd4194304;
parameter    ap_ST_fsm_state24 = 35'd8388608;
parameter    ap_ST_fsm_state25 = 35'd16777216;
parameter    ap_ST_fsm_state26 = 35'd33554432;
parameter    ap_ST_fsm_state27 = 35'd67108864;
parameter    ap_ST_fsm_state28 = 35'd134217728;
parameter    ap_ST_fsm_state29 = 35'd268435456;
parameter    ap_ST_fsm_state30 = 35'd536870912;
parameter    ap_ST_fsm_state31 = 35'd1073741824;
parameter    ap_ST_fsm_state32 = 35'd2147483648;
parameter    ap_ST_fsm_state33 = 35'd4294967296;
parameter    ap_ST_fsm_state34 = 35'd8589934592;
parameter    ap_ST_fsm_state35 = 35'd17179869184;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [0:0] centroids_x_V_address0;
output   centroids_x_V_ce0;
output   centroids_x_V_we0;
output  [16:0] centroids_x_V_d0;
input  [16:0] centroids_x_V_q0;
output  [0:0] centroids_x_V_address1;
output   centroids_x_V_ce1;
output   centroids_x_V_we1;
output  [16:0] centroids_x_V_d1;
input  [16:0] centroids_x_V_q1;
output  [0:0] centroids_y_V_address0;
output   centroids_y_V_ce0;
output   centroids_y_V_we0;
output  [16:0] centroids_y_V_d0;
input  [16:0] centroids_y_V_q0;
output  [0:0] centroids_y_V_address1;
output   centroids_y_V_ce1;
output   centroids_y_V_we1;
output  [16:0] centroids_y_V_d1;
input  [16:0] centroids_y_V_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[0:0] centroids_x_V_address0;
reg centroids_x_V_ce0;
reg centroids_x_V_we0;
reg[0:0] centroids_x_V_address1;
reg centroids_x_V_ce1;
reg centroids_x_V_we1;
reg[0:0] centroids_y_V_address0;
reg centroids_y_V_ce0;
reg centroids_y_V_we0;
reg[0:0] centroids_y_V_address1;
reg centroids_y_V_ce1;
reg centroids_y_V_we1;

(* fsm_encoding = "none" *) reg   [34:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [5:0] x_data_V_address0;
reg    x_data_V_ce0;
wire   [12:0] x_data_V_q0;
reg   [5:0] x_data_V_address1;
reg    x_data_V_ce1;
wire   [12:0] x_data_V_q1;
reg   [5:0] y_data_V_address0;
reg    y_data_V_ce0;
wire   [12:0] y_data_V_q0;
reg   [5:0] y_data_V_address1;
reg    y_data_V_ce1;
wire   [12:0] y_data_V_q1;
wire   [1:0] i_fu_580_p2;
wire    ap_CS_fsm_state2;
reg   [16:0] centroids_x_V_load_reg_1161;
wire    ap_CS_fsm_state3;
reg   [16:0] centroids_y_V_load_reg_1175;
reg   [16:0] centroids_x_V_load_1_reg_1189;
reg   [16:0] centroids_y_V_load_1_reg_1203;
wire   [63:0] zext_ln31_fu_616_p1;
reg   [63:0] zext_ln31_reg_1220;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln30_fu_610_p2;
wire   [63:0] zext_ln31_1_fu_628_p1;
reg   [63:0] zext_ln31_1_reg_1235;
wire   [16:0] sub_ln703_fu_638_p2;
reg   [16:0] sub_ln703_reg_1250;
wire    ap_CS_fsm_state5;
wire   [16:0] sub_ln703_1_fu_647_p2;
reg   [16:0] sub_ln703_1_reg_1255;
wire   [16:0] sub_ln703_2_fu_652_p2;
reg   [16:0] sub_ln703_2_reg_1260;
wire   [16:0] sub_ln703_3_fu_657_p2;
reg   [16:0] sub_ln703_3_reg_1265;
wire   [16:0] sub_ln703_4_fu_666_p2;
reg   [16:0] sub_ln703_4_reg_1270;
wire   [16:0] sub_ln703_5_fu_675_p2;
reg   [16:0] sub_ln703_5_reg_1275;
wire   [16:0] sub_ln703_6_fu_680_p2;
reg   [16:0] sub_ln703_6_reg_1280;
wire   [16:0] sub_ln703_7_fu_685_p2;
reg   [16:0] sub_ln703_7_reg_1285;
wire   [63:0] zext_ln31_2_fu_696_p1;
reg   [63:0] zext_ln31_2_reg_1290;
wire   [63:0] zext_ln31_3_fu_708_p1;
reg   [63:0] zext_ln31_3_reg_1305;
wire   [0:0] grp_fu_550_p2;
reg   [0:0] icmp_ln1495_reg_1320;
wire    ap_CS_fsm_state6;
wire   [0:0] grp_fu_568_p2;
reg   [0:0] icmp_ln1495_1_reg_1325;
wire   [16:0] sub_ln703_8_fu_718_p2;
reg   [16:0] sub_ln703_8_reg_1330;
wire   [16:0] sub_ln703_9_fu_727_p2;
reg   [16:0] sub_ln703_9_reg_1335;
wire   [16:0] sub_ln703_10_fu_732_p2;
reg   [16:0] sub_ln703_10_reg_1340;
wire   [16:0] sub_ln703_11_fu_737_p2;
reg   [16:0] sub_ln703_11_reg_1345;
wire   [16:0] sub_ln703_12_fu_746_p2;
reg   [16:0] sub_ln703_12_reg_1350;
wire   [16:0] sub_ln703_13_fu_755_p2;
reg   [16:0] sub_ln703_13_reg_1355;
wire   [16:0] sub_ln703_14_fu_760_p2;
reg   [16:0] sub_ln703_14_reg_1360;
wire   [16:0] sub_ln703_15_fu_765_p2;
reg   [16:0] sub_ln703_15_reg_1365;
wire   [63:0] zext_ln31_4_fu_776_p1;
reg   [63:0] zext_ln31_4_reg_1370;
wire   [63:0] zext_ln31_5_fu_788_p1;
reg   [63:0] zext_ln31_5_reg_1385;
reg   [0:0] icmp_ln1495_2_reg_1400;
wire    ap_CS_fsm_state7;
reg   [0:0] icmp_ln1495_3_reg_1405;
wire   [16:0] sub_ln703_16_fu_798_p2;
reg   [16:0] sub_ln703_16_reg_1410;
wire   [16:0] sub_ln703_17_fu_807_p2;
reg   [16:0] sub_ln703_17_reg_1415;
wire   [16:0] sub_ln703_18_fu_812_p2;
reg   [16:0] sub_ln703_18_reg_1420;
wire   [16:0] sub_ln703_19_fu_817_p2;
reg   [16:0] sub_ln703_19_reg_1425;
wire   [16:0] sub_ln703_20_fu_826_p2;
reg   [16:0] sub_ln703_20_reg_1430;
wire   [16:0] sub_ln703_21_fu_835_p2;
reg   [16:0] sub_ln703_21_reg_1435;
wire   [16:0] sub_ln703_22_fu_840_p2;
reg   [16:0] sub_ln703_22_reg_1440;
wire   [16:0] sub_ln703_23_fu_845_p2;
reg   [16:0] sub_ln703_23_reg_1445;
wire   [63:0] zext_ln31_6_fu_856_p1;
reg   [63:0] zext_ln31_6_reg_1450;
wire   [63:0] zext_ln31_7_fu_868_p1;
reg   [63:0] zext_ln31_7_reg_1465;
reg   [0:0] icmp_ln1495_4_reg_1480;
wire    ap_CS_fsm_state8;
reg   [0:0] icmp_ln1495_5_reg_1485;
wire   [16:0] sub_ln703_24_fu_878_p2;
reg   [16:0] sub_ln703_24_reg_1490;
wire   [16:0] sub_ln703_25_fu_887_p2;
reg   [16:0] sub_ln703_25_reg_1495;
wire   [16:0] sub_ln703_26_fu_892_p2;
reg   [16:0] sub_ln703_26_reg_1500;
wire   [16:0] sub_ln703_27_fu_897_p2;
reg   [16:0] sub_ln703_27_reg_1505;
wire   [16:0] sub_ln703_28_fu_906_p2;
reg   [16:0] sub_ln703_28_reg_1510;
wire   [16:0] sub_ln703_29_fu_915_p2;
reg   [16:0] sub_ln703_29_reg_1515;
wire   [16:0] sub_ln703_30_fu_920_p2;
reg   [16:0] sub_ln703_30_reg_1520;
wire   [16:0] sub_ln703_31_fu_925_p2;
reg   [16:0] sub_ln703_31_reg_1525;
wire   [63:0] zext_ln31_8_fu_936_p1;
reg   [63:0] zext_ln31_8_reg_1530;
wire   [63:0] zext_ln31_9_fu_948_p1;
reg   [63:0] zext_ln31_9_reg_1545;
wire   [5:0] add_ln30_8_fu_954_p2;
reg   [5:0] add_ln30_8_reg_1560;
reg   [0:0] icmp_ln1495_6_reg_1565;
wire    ap_CS_fsm_state9;
reg   [0:0] icmp_ln1495_7_reg_1570;
wire   [16:0] sub_ln703_32_fu_964_p2;
reg   [16:0] sub_ln703_32_reg_1575;
wire   [16:0] sub_ln703_33_fu_973_p2;
reg   [16:0] sub_ln703_33_reg_1580;
wire   [16:0] sub_ln703_34_fu_978_p2;
reg   [16:0] sub_ln703_34_reg_1585;
wire   [16:0] sub_ln703_35_fu_983_p2;
reg   [16:0] sub_ln703_35_reg_1590;
wire   [16:0] sub_ln703_36_fu_992_p2;
reg   [16:0] sub_ln703_36_reg_1595;
wire   [16:0] sub_ln703_37_fu_1001_p2;
reg   [16:0] sub_ln703_37_reg_1600;
wire   [16:0] sub_ln703_38_fu_1006_p2;
reg   [16:0] sub_ln703_38_reg_1605;
wire   [16:0] sub_ln703_39_fu_1011_p2;
reg   [16:0] sub_ln703_39_reg_1610;
reg   [0:0] icmp_ln1495_8_reg_1615;
wire    ap_CS_fsm_state10;
reg   [0:0] icmp_ln1495_9_reg_1620;
wire   [1:0] i_1_fu_1022_p2;
reg   [1:0] i_1_reg_1628;
wire    ap_CS_fsm_state12;
wire   [5:0] j_fu_1034_p2;
reg   [5:0] j_reg_1636;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln49_fu_1028_p2;
wire   [0:0] icmp_ln57_fu_1047_p2;
reg   [0:0] icmp_ln57_reg_1656;
wire   [17:0] zext_ln1148_fu_1057_p1;
wire   [16:0] mean_value_x_V_1_fu_1113_p3;
wire    ap_CS_fsm_state14;
wire   [16:0] mean_value_y_V_1_fu_1121_p3;
wire   [15:0] count_1_fu_1129_p3;
reg   [5:0] data_cluster_id_address0;
reg    data_cluster_id_ce0;
reg    data_cluster_id_we0;
reg   [0:0] data_cluster_id_d0;
wire   [0:0] data_cluster_id_q0;
reg   [5:0] data_cluster_id_address1;
reg    data_cluster_id_ce1;
reg    data_cluster_id_we1;
reg   [0:0] data_cluster_id_d1;
wire    grp_abs_custom_fu_498_ap_ready;
reg   [16:0] grp_abs_custom_fu_498_number_V;
wire   [16:0] grp_abs_custom_fu_498_ap_return;
wire    grp_abs_custom_fu_503_ap_ready;
reg   [16:0] grp_abs_custom_fu_503_number_V;
wire   [16:0] grp_abs_custom_fu_503_ap_return;
wire    grp_abs_custom_fu_508_ap_ready;
reg   [16:0] grp_abs_custom_fu_508_number_V;
wire   [16:0] grp_abs_custom_fu_508_ap_return;
wire    grp_abs_custom_fu_513_ap_ready;
reg   [16:0] grp_abs_custom_fu_513_number_V;
wire   [16:0] grp_abs_custom_fu_513_ap_return;
wire    grp_abs_custom_fu_518_ap_ready;
reg   [16:0] grp_abs_custom_fu_518_number_V;
wire   [16:0] grp_abs_custom_fu_518_ap_return;
wire    grp_abs_custom_fu_523_ap_ready;
reg   [16:0] grp_abs_custom_fu_523_number_V;
wire   [16:0] grp_abs_custom_fu_523_ap_return;
wire    grp_abs_custom_fu_528_ap_ready;
reg   [16:0] grp_abs_custom_fu_528_number_V;
wire   [16:0] grp_abs_custom_fu_528_ap_return;
wire    grp_abs_custom_fu_533_ap_ready;
reg   [16:0] grp_abs_custom_fu_533_number_V;
wire   [16:0] grp_abs_custom_fu_533_ap_return;
reg   [1:0] p_Val2_1_reg_416;
wire   [0:0] icmp_ln19_fu_574_p2;
reg   [5:0] i_1_0_reg_427;
wire    ap_CS_fsm_state11;
reg   [1:0] i_2_reg_439;
wire    ap_CS_fsm_state35;
reg  signed [16:0] p_Val2_s_reg_451;
wire   [0:0] icmp_ln44_fu_1016_p2;
reg  signed [16:0] p_Val2_5_reg_463;
reg   [5:0] j_1_reg_475;
reg   [15:0] tmp_V_reg_486;
wire   [63:0] zext_ln20_fu_586_p1;
wire   [63:0] zext_ln50_fu_1040_p1;
wire   [63:0] zext_ln58_fu_1137_p1;
wire   [16:0] zext_ln728_fu_604_p1;
wire   [16:0] grp_fu_544_p2;
wire   [16:0] grp_fu_538_p2;
wire   [16:0] grp_fu_562_p2;
wire   [16:0] grp_fu_556_p2;
wire   [0:0] trunc_ln728_fu_592_p1;
wire   [10:0] shl_ln_fu_596_p3;
wire   [5:0] or_ln30_fu_622_p2;
wire  signed [16:0] sext_ln1265_fu_634_p1;
wire  signed [16:0] sext_ln1265_1_fu_643_p1;
wire  signed [16:0] sext_ln1265_2_fu_662_p1;
wire  signed [16:0] sext_ln1265_3_fu_671_p1;
wire   [5:0] add_ln30_fu_690_p2;
wire   [5:0] add_ln30_1_fu_702_p2;
wire  signed [16:0] sext_ln1265_4_fu_714_p1;
wire  signed [16:0] sext_ln1265_5_fu_723_p1;
wire  signed [16:0] sext_ln1265_6_fu_742_p1;
wire  signed [16:0] sext_ln1265_7_fu_751_p1;
wire   [5:0] add_ln30_2_fu_770_p2;
wire   [5:0] add_ln30_3_fu_782_p2;
wire  signed [16:0] sext_ln1265_8_fu_794_p1;
wire  signed [16:0] sext_ln1265_9_fu_803_p1;
wire  signed [16:0] sext_ln1265_10_fu_822_p1;
wire  signed [16:0] sext_ln1265_11_fu_831_p1;
wire   [5:0] add_ln30_4_fu_850_p2;
wire   [5:0] add_ln30_5_fu_862_p2;
wire  signed [16:0] sext_ln1265_12_fu_874_p1;
wire  signed [16:0] sext_ln1265_13_fu_883_p1;
wire  signed [16:0] sext_ln1265_14_fu_902_p1;
wire  signed [16:0] sext_ln1265_15_fu_911_p1;
wire   [5:0] add_ln30_6_fu_930_p2;
wire   [5:0] add_ln30_7_fu_942_p2;
wire  signed [16:0] sext_ln1265_16_fu_960_p1;
wire  signed [16:0] sext_ln1265_17_fu_969_p1;
wire  signed [16:0] sext_ln1265_18_fu_988_p1;
wire  signed [16:0] sext_ln1265_19_fu_997_p1;
wire  signed [17:0] grp_fu_1061_p0;
wire   [16:0] grp_fu_1061_p1;
wire  signed [17:0] grp_fu_1071_p0;
wire   [16:0] grp_fu_1071_p1;
wire   [1:0] zext_ln50_1_fu_1077_p1;
wire  signed [16:0] sext_ln1265_20_fu_1087_p1;
wire  signed [16:0] sext_ln1265_21_fu_1097_p1;
wire   [0:0] icmp_ln50_fu_1081_p2;
wire   [16:0] mean_value_x_V_fu_1091_p2;
wire   [16:0] mean_value_y_V_fu_1101_p2;
wire   [15:0] count_fu_1107_p2;
wire   [16:0] grp_fu_1061_p2;
wire   [16:0] grp_fu_1071_p2;
reg    grp_fu_1061_ap_start;
wire    grp_fu_1061_ap_done;
reg    grp_fu_1071_ap_start;
wire    grp_fu_1071_ap_done;
reg   [34:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 35'd1;
end

kmeans_x_data_V #(
    .DataWidth( 13 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
x_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(x_data_V_address0),
    .ce0(x_data_V_ce0),
    .q0(x_data_V_q0),
    .address1(x_data_V_address1),
    .ce1(x_data_V_ce1),
    .q1(x_data_V_q1)
);

kmeans_y_data_V #(
    .DataWidth( 13 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
y_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(y_data_V_address0),
    .ce0(y_data_V_ce0),
    .q0(y_data_V_q0),
    .address1(y_data_V_address1),
    .ce1(y_data_V_ce1),
    .q1(y_data_V_q1)
);

kmeans_data_clustbkb #(
    .DataWidth( 1 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
data_cluster_id_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(data_cluster_id_address0),
    .ce0(data_cluster_id_ce0),
    .we0(data_cluster_id_we0),
    .d0(data_cluster_id_d0),
    .q0(data_cluster_id_q0),
    .address1(data_cluster_id_address1),
    .ce1(data_cluster_id_ce1),
    .we1(data_cluster_id_we1),
    .d1(data_cluster_id_d1)
);

abs_custom grp_abs_custom_fu_498(
    .ap_ready(grp_abs_custom_fu_498_ap_ready),
    .number_V(grp_abs_custom_fu_498_number_V),
    .ap_return(grp_abs_custom_fu_498_ap_return)
);

abs_custom grp_abs_custom_fu_503(
    .ap_ready(grp_abs_custom_fu_503_ap_ready),
    .number_V(grp_abs_custom_fu_503_number_V),
    .ap_return(grp_abs_custom_fu_503_ap_return)
);

abs_custom grp_abs_custom_fu_508(
    .ap_ready(grp_abs_custom_fu_508_ap_ready),
    .number_V(grp_abs_custom_fu_508_number_V),
    .ap_return(grp_abs_custom_fu_508_ap_return)
);

abs_custom grp_abs_custom_fu_513(
    .ap_ready(grp_abs_custom_fu_513_ap_ready),
    .number_V(grp_abs_custom_fu_513_number_V),
    .ap_return(grp_abs_custom_fu_513_ap_return)
);

abs_custom grp_abs_custom_fu_518(
    .ap_ready(grp_abs_custom_fu_518_ap_ready),
    .number_V(grp_abs_custom_fu_518_number_V),
    .ap_return(grp_abs_custom_fu_518_ap_return)
);

abs_custom grp_abs_custom_fu_523(
    .ap_ready(grp_abs_custom_fu_523_ap_ready),
    .number_V(grp_abs_custom_fu_523_number_V),
    .ap_return(grp_abs_custom_fu_523_ap_return)
);

abs_custom grp_abs_custom_fu_528(
    .ap_ready(grp_abs_custom_fu_528_ap_ready),
    .number_V(grp_abs_custom_fu_528_number_V),
    .ap_return(grp_abs_custom_fu_528_ap_return)
);

abs_custom grp_abs_custom_fu_533(
    .ap_ready(grp_abs_custom_fu_533_ap_ready),
    .number_V(grp_abs_custom_fu_533_number_V),
    .ap_return(grp_abs_custom_fu_533_ap_return)
);

kmeans_sdiv_18s_1cud #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 17 ))
kmeans_sdiv_18s_1cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1061_ap_start),
    .done(grp_fu_1061_ap_done),
    .din0(grp_fu_1061_p0),
    .din1(grp_fu_1061_p1),
    .ce(1'b1),
    .dout(grp_fu_1061_p2)
);

kmeans_sdiv_18s_1cud #(
    .ID( 1 ),
    .NUM_STAGE( 22 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 17 ))
kmeans_sdiv_18s_1cud_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1071_ap_start),
    .done(grp_fu_1071_ap_done),
    .din0(grp_fu_1071_p0),
    .din1(grp_fu_1071_p1),
    .ce(1'b1),
    .dout(grp_fu_1071_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_1_0_reg_427 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        i_1_0_reg_427 <= add_ln30_8_reg_1560;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln30_fu_610_p2 == 1'd1))) begin
        i_2_reg_439 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        i_2_reg_439 <= i_1_reg_1628;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln44_fu_1016_p2 == 1'd0))) begin
        j_1_reg_475 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        j_1_reg_475 <= j_reg_1636;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln19_fu_574_p2 == 1'd0))) begin
        p_Val2_1_reg_416 <= i_fu_580_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Val2_1_reg_416 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln44_fu_1016_p2 == 1'd0))) begin
        p_Val2_5_reg_463 <= 17'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        p_Val2_5_reg_463 <= mean_value_y_V_1_fu_1121_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln44_fu_1016_p2 == 1'd0))) begin
        p_Val2_s_reg_451 <= 17'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        p_Val2_s_reg_451 <= mean_value_x_V_1_fu_1113_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln44_fu_1016_p2 == 1'd0))) begin
        tmp_V_reg_486 <= 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_V_reg_486 <= count_1_fu_1129_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln30_8_reg_1560 <= add_ln30_8_fu_954_p2;
        icmp_ln1495_4_reg_1480 <= grp_fu_550_p2;
        icmp_ln1495_5_reg_1485 <= grp_fu_568_p2;
        sub_ln703_24_reg_1490 <= sub_ln703_24_fu_878_p2;
        sub_ln703_25_reg_1495 <= sub_ln703_25_fu_887_p2;
        sub_ln703_26_reg_1500 <= sub_ln703_26_fu_892_p2;
        sub_ln703_27_reg_1505 <= sub_ln703_27_fu_897_p2;
        sub_ln703_28_reg_1510 <= sub_ln703_28_fu_906_p2;
        sub_ln703_29_reg_1515 <= sub_ln703_29_fu_915_p2;
        sub_ln703_30_reg_1520 <= sub_ln703_30_fu_920_p2;
        sub_ln703_31_reg_1525 <= sub_ln703_31_fu_925_p2;
        zext_ln31_8_reg_1530[5 : 0] <= zext_ln31_8_fu_936_p1[5 : 0];
        zext_ln31_9_reg_1545[5 : 0] <= zext_ln31_9_fu_948_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        centroids_x_V_load_1_reg_1189 <= centroids_x_V_q1;
        centroids_x_V_load_reg_1161 <= centroids_x_V_q0;
        centroids_y_V_load_1_reg_1203 <= centroids_y_V_q1;
        centroids_y_V_load_reg_1175 <= centroids_y_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_1_reg_1628 <= i_1_fu_1022_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln1495_1_reg_1325 <= grp_fu_568_p2;
        icmp_ln1495_reg_1320 <= grp_fu_550_p2;
        sub_ln703_10_reg_1340 <= sub_ln703_10_fu_732_p2;
        sub_ln703_11_reg_1345 <= sub_ln703_11_fu_737_p2;
        sub_ln703_12_reg_1350 <= sub_ln703_12_fu_746_p2;
        sub_ln703_13_reg_1355 <= sub_ln703_13_fu_755_p2;
        sub_ln703_14_reg_1360 <= sub_ln703_14_fu_760_p2;
        sub_ln703_15_reg_1365 <= sub_ln703_15_fu_765_p2;
        sub_ln703_8_reg_1330 <= sub_ln703_8_fu_718_p2;
        sub_ln703_9_reg_1335 <= sub_ln703_9_fu_727_p2;
        zext_ln31_4_reg_1370[5 : 0] <= zext_ln31_4_fu_776_p1[5 : 0];
        zext_ln31_5_reg_1385[5 : 0] <= zext_ln31_5_fu_788_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        icmp_ln1495_2_reg_1400 <= grp_fu_550_p2;
        icmp_ln1495_3_reg_1405 <= grp_fu_568_p2;
        sub_ln703_16_reg_1410 <= sub_ln703_16_fu_798_p2;
        sub_ln703_17_reg_1415 <= sub_ln703_17_fu_807_p2;
        sub_ln703_18_reg_1420 <= sub_ln703_18_fu_812_p2;
        sub_ln703_19_reg_1425 <= sub_ln703_19_fu_817_p2;
        sub_ln703_20_reg_1430 <= sub_ln703_20_fu_826_p2;
        sub_ln703_21_reg_1435 <= sub_ln703_21_fu_835_p2;
        sub_ln703_22_reg_1440 <= sub_ln703_22_fu_840_p2;
        sub_ln703_23_reg_1445 <= sub_ln703_23_fu_845_p2;
        zext_ln31_6_reg_1450[5 : 0] <= zext_ln31_6_fu_856_p1[5 : 0];
        zext_ln31_7_reg_1465[5 : 0] <= zext_ln31_7_fu_868_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        icmp_ln1495_6_reg_1565 <= grp_fu_550_p2;
        icmp_ln1495_7_reg_1570 <= grp_fu_568_p2;
        sub_ln703_32_reg_1575 <= sub_ln703_32_fu_964_p2;
        sub_ln703_33_reg_1580 <= sub_ln703_33_fu_973_p2;
        sub_ln703_34_reg_1585 <= sub_ln703_34_fu_978_p2;
        sub_ln703_35_reg_1590 <= sub_ln703_35_fu_983_p2;
        sub_ln703_36_reg_1595 <= sub_ln703_36_fu_992_p2;
        sub_ln703_37_reg_1600 <= sub_ln703_37_fu_1001_p2;
        sub_ln703_38_reg_1605 <= sub_ln703_38_fu_1006_p2;
        sub_ln703_39_reg_1610 <= sub_ln703_39_fu_1011_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        icmp_ln1495_8_reg_1615 <= grp_fu_550_p2;
        icmp_ln1495_9_reg_1620 <= grp_fu_568_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln49_fu_1028_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        icmp_ln57_reg_1656 <= icmp_ln57_fu_1047_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        j_reg_1636 <= j_fu_1034_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        sub_ln703_1_reg_1255 <= sub_ln703_1_fu_647_p2;
        sub_ln703_2_reg_1260 <= sub_ln703_2_fu_652_p2;
        sub_ln703_3_reg_1265 <= sub_ln703_3_fu_657_p2;
        sub_ln703_4_reg_1270 <= sub_ln703_4_fu_666_p2;
        sub_ln703_5_reg_1275 <= sub_ln703_5_fu_675_p2;
        sub_ln703_6_reg_1280 <= sub_ln703_6_fu_680_p2;
        sub_ln703_7_reg_1285 <= sub_ln703_7_fu_685_p2;
        sub_ln703_reg_1250 <= sub_ln703_fu_638_p2;
        zext_ln31_2_reg_1290[5 : 0] <= zext_ln31_2_fu_696_p1[5 : 0];
        zext_ln31_3_reg_1305[5 : 0] <= zext_ln31_3_fu_708_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln30_fu_610_p2 == 1'd0))) begin
        zext_ln31_1_reg_1235[5 : 1] <= zext_ln31_1_fu_628_p1[5 : 1];
        zext_ln31_reg_1220[5 : 0] <= zext_ln31_fu_616_p1[5 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln44_fu_1016_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln44_fu_1016_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if ((icmp_ln19_fu_574_p2 == 1'd1)) begin
            centroids_x_V_address0 = 1'd0;
        end else if ((icmp_ln19_fu_574_p2 == 1'd0)) begin
            centroids_x_V_address0 = zext_ln20_fu_586_p1;
        end else begin
            centroids_x_V_address0 = 'bx;
        end
    end else begin
        centroids_x_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        centroids_x_V_address1 = zext_ln58_fu_1137_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        centroids_x_V_address1 = 1'd1;
    end else begin
        centroids_x_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln19_fu_574_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln19_fu_574_p2 == 1'd0)))) begin
        centroids_x_V_ce0 = 1'b1;
    end else begin
        centroids_x_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state2))) begin
        centroids_x_V_ce1 = 1'b1;
    end else begin
        centroids_x_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln19_fu_574_p2 == 1'd0))) begin
        centroids_x_V_we0 = 1'b1;
    end else begin
        centroids_x_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) & (icmp_ln57_reg_1656 == 1'd0))) begin
        centroids_x_V_we1 = 1'b1;
    end else begin
        centroids_x_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if ((icmp_ln19_fu_574_p2 == 1'd1)) begin
            centroids_y_V_address0 = 1'd0;
        end else if ((icmp_ln19_fu_574_p2 == 1'd0)) begin
            centroids_y_V_address0 = zext_ln20_fu_586_p1;
        end else begin
            centroids_y_V_address0 = 'bx;
        end
    end else begin
        centroids_y_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        centroids_y_V_address1 = zext_ln58_fu_1137_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        centroids_y_V_address1 = 1'd1;
    end else begin
        centroids_y_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln19_fu_574_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln19_fu_574_p2 == 1'd0)))) begin
        centroids_y_V_ce0 = 1'b1;
    end else begin
        centroids_y_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state2))) begin
        centroids_y_V_ce1 = 1'b1;
    end else begin
        centroids_y_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln19_fu_574_p2 == 1'd0))) begin
        centroids_y_V_we0 = 1'b1;
    end else begin
        centroids_y_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) & (icmp_ln57_reg_1656 == 1'd0))) begin
        centroids_y_V_we1 = 1'b1;
    end else begin
        centroids_y_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        data_cluster_id_address0 = zext_ln50_fu_1040_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        data_cluster_id_address0 = zext_ln31_8_reg_1530;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        data_cluster_id_address0 = zext_ln31_6_reg_1450;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        data_cluster_id_address0 = zext_ln31_4_reg_1370;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        data_cluster_id_address0 = zext_ln31_2_reg_1290;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        data_cluster_id_address0 = zext_ln31_reg_1220;
    end else begin
        data_cluster_id_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        data_cluster_id_address1 = zext_ln31_9_reg_1545;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        data_cluster_id_address1 = zext_ln31_7_reg_1465;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        data_cluster_id_address1 = zext_ln31_5_reg_1385;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        data_cluster_id_address1 = zext_ln31_3_reg_1305;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        data_cluster_id_address1 = zext_ln31_1_reg_1235;
    end else begin
        data_cluster_id_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        data_cluster_id_ce0 = 1'b1;
    end else begin
        data_cluster_id_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        data_cluster_id_ce1 = 1'b1;
    end else begin
        data_cluster_id_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        data_cluster_id_d0 = icmp_ln1495_8_reg_1615;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        data_cluster_id_d0 = icmp_ln1495_6_reg_1565;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        data_cluster_id_d0 = icmp_ln1495_4_reg_1480;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        data_cluster_id_d0 = icmp_ln1495_2_reg_1400;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        data_cluster_id_d0 = icmp_ln1495_reg_1320;
    end else begin
        data_cluster_id_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        data_cluster_id_d1 = icmp_ln1495_9_reg_1620;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        data_cluster_id_d1 = icmp_ln1495_7_reg_1570;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        data_cluster_id_d1 = icmp_ln1495_5_reg_1485;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        data_cluster_id_d1 = icmp_ln1495_3_reg_1405;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        data_cluster_id_d1 = icmp_ln1495_1_reg_1325;
    end else begin
        data_cluster_id_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        data_cluster_id_we0 = 1'b1;
    end else begin
        data_cluster_id_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        data_cluster_id_we1 = 1'b1;
    end else begin
        data_cluster_id_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_abs_custom_fu_498_number_V = sub_ln703_32_reg_1575;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_abs_custom_fu_498_number_V = sub_ln703_24_reg_1490;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_abs_custom_fu_498_number_V = sub_ln703_16_reg_1410;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_abs_custom_fu_498_number_V = sub_ln703_8_reg_1330;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_abs_custom_fu_498_number_V = sub_ln703_reg_1250;
    end else begin
        grp_abs_custom_fu_498_number_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_abs_custom_fu_503_number_V = sub_ln703_33_reg_1580;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_abs_custom_fu_503_number_V = sub_ln703_25_reg_1495;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_abs_custom_fu_503_number_V = sub_ln703_17_reg_1415;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_abs_custom_fu_503_number_V = sub_ln703_9_reg_1335;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_abs_custom_fu_503_number_V = sub_ln703_1_reg_1255;
    end else begin
        grp_abs_custom_fu_503_number_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_abs_custom_fu_508_number_V = sub_ln703_34_reg_1585;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_abs_custom_fu_508_number_V = sub_ln703_26_reg_1500;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_abs_custom_fu_508_number_V = sub_ln703_18_reg_1420;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_abs_custom_fu_508_number_V = sub_ln703_10_reg_1340;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_abs_custom_fu_508_number_V = sub_ln703_2_reg_1260;
    end else begin
        grp_abs_custom_fu_508_number_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_abs_custom_fu_513_number_V = sub_ln703_35_reg_1590;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_abs_custom_fu_513_number_V = sub_ln703_27_reg_1505;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_abs_custom_fu_513_number_V = sub_ln703_19_reg_1425;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_abs_custom_fu_513_number_V = sub_ln703_11_reg_1345;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_abs_custom_fu_513_number_V = sub_ln703_3_reg_1265;
    end else begin
        grp_abs_custom_fu_513_number_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_abs_custom_fu_518_number_V = sub_ln703_36_reg_1595;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_abs_custom_fu_518_number_V = sub_ln703_28_reg_1510;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_abs_custom_fu_518_number_V = sub_ln703_20_reg_1430;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_abs_custom_fu_518_number_V = sub_ln703_12_reg_1350;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_abs_custom_fu_518_number_V = sub_ln703_4_reg_1270;
    end else begin
        grp_abs_custom_fu_518_number_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_abs_custom_fu_523_number_V = sub_ln703_37_reg_1600;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_abs_custom_fu_523_number_V = sub_ln703_29_reg_1515;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_abs_custom_fu_523_number_V = sub_ln703_21_reg_1435;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_abs_custom_fu_523_number_V = sub_ln703_13_reg_1355;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_abs_custom_fu_523_number_V = sub_ln703_5_reg_1275;
    end else begin
        grp_abs_custom_fu_523_number_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_abs_custom_fu_528_number_V = sub_ln703_38_reg_1605;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_abs_custom_fu_528_number_V = sub_ln703_30_reg_1520;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_abs_custom_fu_528_number_V = sub_ln703_22_reg_1440;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_abs_custom_fu_528_number_V = sub_ln703_14_reg_1360;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_abs_custom_fu_528_number_V = sub_ln703_6_reg_1280;
    end else begin
        grp_abs_custom_fu_528_number_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_abs_custom_fu_533_number_V = sub_ln703_39_reg_1610;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_abs_custom_fu_533_number_V = sub_ln703_31_reg_1525;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_abs_custom_fu_533_number_V = sub_ln703_23_reg_1445;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_abs_custom_fu_533_number_V = sub_ln703_15_reg_1365;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_abs_custom_fu_533_number_V = sub_ln703_7_reg_1285;
    end else begin
        grp_abs_custom_fu_533_number_V = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln49_fu_1028_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln57_fu_1047_p2 == 1'd0))) begin
        grp_fu_1061_ap_start = 1'b1;
    end else begin
        grp_fu_1061_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln49_fu_1028_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln57_fu_1047_p2 == 1'd0))) begin
        grp_fu_1071_ap_start = 1'b1;
    end else begin
        grp_fu_1071_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        x_data_V_address0 = zext_ln50_fu_1040_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        x_data_V_address0 = zext_ln31_8_fu_936_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        x_data_V_address0 = zext_ln31_6_fu_856_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x_data_V_address0 = zext_ln31_4_fu_776_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        x_data_V_address0 = zext_ln31_2_fu_696_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x_data_V_address0 = zext_ln31_fu_616_p1;
    end else begin
        x_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        x_data_V_address1 = zext_ln31_9_fu_948_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        x_data_V_address1 = zext_ln31_7_fu_868_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        x_data_V_address1 = zext_ln31_5_fu_788_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        x_data_V_address1 = zext_ln31_3_fu_708_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        x_data_V_address1 = zext_ln31_1_fu_628_p1;
    end else begin
        x_data_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        x_data_V_ce0 = 1'b1;
    end else begin
        x_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        x_data_V_ce1 = 1'b1;
    end else begin
        x_data_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        y_data_V_address0 = zext_ln50_fu_1040_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        y_data_V_address0 = zext_ln31_8_fu_936_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        y_data_V_address0 = zext_ln31_6_fu_856_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        y_data_V_address0 = zext_ln31_4_fu_776_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_data_V_address0 = zext_ln31_2_fu_696_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        y_data_V_address0 = zext_ln31_fu_616_p1;
    end else begin
        y_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        y_data_V_address1 = zext_ln31_9_fu_948_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        y_data_V_address1 = zext_ln31_7_fu_868_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        y_data_V_address1 = zext_ln31_5_fu_788_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        y_data_V_address1 = zext_ln31_3_fu_708_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        y_data_V_address1 = zext_ln31_1_fu_628_p1;
    end else begin
        y_data_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        y_data_V_ce0 = 1'b1;
    end else begin
        y_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        y_data_V_ce1 = 1'b1;
    end else begin
        y_data_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln19_fu_574_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln30_fu_610_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln44_fu_1016_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln57_fu_1047_p2 == 1'd1) & (icmp_ln49_fu_1028_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else if (((icmp_ln49_fu_1028_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln57_fu_1047_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln30_1_fu_702_p2 = (i_1_0_reg_427 + 6'd3);

assign add_ln30_2_fu_770_p2 = (i_1_0_reg_427 + 6'd4);

assign add_ln30_3_fu_782_p2 = (i_1_0_reg_427 + 6'd5);

assign add_ln30_4_fu_850_p2 = (i_1_0_reg_427 + 6'd6);

assign add_ln30_5_fu_862_p2 = (i_1_0_reg_427 + 6'd7);

assign add_ln30_6_fu_930_p2 = (i_1_0_reg_427 + 6'd8);

assign add_ln30_7_fu_942_p2 = (i_1_0_reg_427 + 6'd9);

assign add_ln30_8_fu_954_p2 = (i_1_0_reg_427 + 6'd10);

assign add_ln30_fu_690_p2 = (i_1_0_reg_427 + 6'd2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign centroids_x_V_d0 = zext_ln728_fu_604_p1;

assign centroids_x_V_d1 = grp_fu_1061_p2[16:0];

assign centroids_y_V_d0 = zext_ln728_fu_604_p1;

assign centroids_y_V_d1 = grp_fu_1071_p2[16:0];

assign count_1_fu_1129_p3 = ((icmp_ln50_fu_1081_p2[0:0] === 1'b1) ? count_fu_1107_p2 : tmp_V_reg_486);

assign count_fu_1107_p2 = (tmp_V_reg_486 + 16'd1);

assign grp_fu_1061_p0 = p_Val2_s_reg_451;

assign grp_fu_1061_p1 = zext_ln1148_fu_1057_p1;

assign grp_fu_1071_p0 = p_Val2_5_reg_463;

assign grp_fu_1071_p1 = zext_ln1148_fu_1057_p1;

assign grp_fu_538_p2 = (grp_abs_custom_fu_503_ap_return + grp_abs_custom_fu_498_ap_return);

assign grp_fu_544_p2 = (grp_abs_custom_fu_513_ap_return + grp_abs_custom_fu_508_ap_return);

assign grp_fu_550_p2 = (($signed(grp_fu_544_p2) < $signed(grp_fu_538_p2)) ? 1'b1 : 1'b0);

assign grp_fu_556_p2 = (grp_abs_custom_fu_523_ap_return + grp_abs_custom_fu_518_ap_return);

assign grp_fu_562_p2 = (grp_abs_custom_fu_533_ap_return + grp_abs_custom_fu_528_ap_return);

assign grp_fu_568_p2 = (($signed(grp_fu_562_p2) < $signed(grp_fu_556_p2)) ? 1'b1 : 1'b0);

assign i_1_fu_1022_p2 = (i_2_reg_439 + 2'd1);

assign i_fu_580_p2 = (p_Val2_1_reg_416 + 2'd1);

assign icmp_ln19_fu_574_p2 = ((p_Val2_1_reg_416 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_610_p2 = ((i_1_0_reg_427 == 6'd50) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_1016_p2 = ((i_2_reg_439 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_1028_p2 = ((j_1_reg_475 == 6'd50) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_1081_p2 = ((zext_ln50_1_fu_1077_p1 == i_2_reg_439) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_1047_p2 = ((tmp_V_reg_486 == 16'd0) ? 1'b1 : 1'b0);

assign j_fu_1034_p2 = (j_1_reg_475 + 6'd1);

assign mean_value_x_V_1_fu_1113_p3 = ((icmp_ln50_fu_1081_p2[0:0] === 1'b1) ? mean_value_x_V_fu_1091_p2 : p_Val2_s_reg_451);

assign mean_value_x_V_fu_1091_p2 = ($signed(sext_ln1265_20_fu_1087_p1) + $signed(p_Val2_s_reg_451));

assign mean_value_y_V_1_fu_1121_p3 = ((icmp_ln50_fu_1081_p2[0:0] === 1'b1) ? mean_value_y_V_fu_1101_p2 : p_Val2_5_reg_463);

assign mean_value_y_V_fu_1101_p2 = ($signed(sext_ln1265_21_fu_1097_p1) + $signed(p_Val2_5_reg_463));

assign or_ln30_fu_622_p2 = (i_1_0_reg_427 | 6'd1);

assign sext_ln1265_10_fu_822_p1 = $signed(x_data_V_q1);

assign sext_ln1265_11_fu_831_p1 = $signed(y_data_V_q1);

assign sext_ln1265_12_fu_874_p1 = $signed(x_data_V_q0);

assign sext_ln1265_13_fu_883_p1 = $signed(y_data_V_q0);

assign sext_ln1265_14_fu_902_p1 = $signed(x_data_V_q1);

assign sext_ln1265_15_fu_911_p1 = $signed(y_data_V_q1);

assign sext_ln1265_16_fu_960_p1 = $signed(x_data_V_q0);

assign sext_ln1265_17_fu_969_p1 = $signed(y_data_V_q0);

assign sext_ln1265_18_fu_988_p1 = $signed(x_data_V_q1);

assign sext_ln1265_19_fu_997_p1 = $signed(y_data_V_q1);

assign sext_ln1265_1_fu_643_p1 = $signed(y_data_V_q0);

assign sext_ln1265_20_fu_1087_p1 = $signed(x_data_V_q0);

assign sext_ln1265_21_fu_1097_p1 = $signed(y_data_V_q0);

assign sext_ln1265_2_fu_662_p1 = $signed(x_data_V_q1);

assign sext_ln1265_3_fu_671_p1 = $signed(y_data_V_q1);

assign sext_ln1265_4_fu_714_p1 = $signed(x_data_V_q0);

assign sext_ln1265_5_fu_723_p1 = $signed(y_data_V_q0);

assign sext_ln1265_6_fu_742_p1 = $signed(x_data_V_q1);

assign sext_ln1265_7_fu_751_p1 = $signed(y_data_V_q1);

assign sext_ln1265_8_fu_794_p1 = $signed(x_data_V_q0);

assign sext_ln1265_9_fu_803_p1 = $signed(y_data_V_q0);

assign sext_ln1265_fu_634_p1 = $signed(x_data_V_q0);

assign shl_ln_fu_596_p3 = {{trunc_ln728_fu_592_p1}, {10'd0}};

assign sub_ln703_10_fu_732_p2 = ($signed(sext_ln1265_4_fu_714_p1) - $signed(centroids_x_V_load_1_reg_1189));

assign sub_ln703_11_fu_737_p2 = ($signed(sext_ln1265_5_fu_723_p1) - $signed(centroids_y_V_load_1_reg_1203));

assign sub_ln703_12_fu_746_p2 = ($signed(sext_ln1265_6_fu_742_p1) - $signed(centroids_x_V_load_reg_1161));

assign sub_ln703_13_fu_755_p2 = ($signed(sext_ln1265_7_fu_751_p1) - $signed(centroids_y_V_load_reg_1175));

assign sub_ln703_14_fu_760_p2 = ($signed(sext_ln1265_6_fu_742_p1) - $signed(centroids_x_V_load_1_reg_1189));

assign sub_ln703_15_fu_765_p2 = ($signed(sext_ln1265_7_fu_751_p1) - $signed(centroids_y_V_load_1_reg_1203));

assign sub_ln703_16_fu_798_p2 = ($signed(sext_ln1265_8_fu_794_p1) - $signed(centroids_x_V_load_reg_1161));

assign sub_ln703_17_fu_807_p2 = ($signed(sext_ln1265_9_fu_803_p1) - $signed(centroids_y_V_load_reg_1175));

assign sub_ln703_18_fu_812_p2 = ($signed(sext_ln1265_8_fu_794_p1) - $signed(centroids_x_V_load_1_reg_1189));

assign sub_ln703_19_fu_817_p2 = ($signed(sext_ln1265_9_fu_803_p1) - $signed(centroids_y_V_load_1_reg_1203));

assign sub_ln703_1_fu_647_p2 = ($signed(sext_ln1265_1_fu_643_p1) - $signed(centroids_y_V_load_reg_1175));

assign sub_ln703_20_fu_826_p2 = ($signed(sext_ln1265_10_fu_822_p1) - $signed(centroids_x_V_load_reg_1161));

assign sub_ln703_21_fu_835_p2 = ($signed(sext_ln1265_11_fu_831_p1) - $signed(centroids_y_V_load_reg_1175));

assign sub_ln703_22_fu_840_p2 = ($signed(sext_ln1265_10_fu_822_p1) - $signed(centroids_x_V_load_1_reg_1189));

assign sub_ln703_23_fu_845_p2 = ($signed(sext_ln1265_11_fu_831_p1) - $signed(centroids_y_V_load_1_reg_1203));

assign sub_ln703_24_fu_878_p2 = ($signed(sext_ln1265_12_fu_874_p1) - $signed(centroids_x_V_load_reg_1161));

assign sub_ln703_25_fu_887_p2 = ($signed(sext_ln1265_13_fu_883_p1) - $signed(centroids_y_V_load_reg_1175));

assign sub_ln703_26_fu_892_p2 = ($signed(sext_ln1265_12_fu_874_p1) - $signed(centroids_x_V_load_1_reg_1189));

assign sub_ln703_27_fu_897_p2 = ($signed(sext_ln1265_13_fu_883_p1) - $signed(centroids_y_V_load_1_reg_1203));

assign sub_ln703_28_fu_906_p2 = ($signed(sext_ln1265_14_fu_902_p1) - $signed(centroids_x_V_load_reg_1161));

assign sub_ln703_29_fu_915_p2 = ($signed(sext_ln1265_15_fu_911_p1) - $signed(centroids_y_V_load_reg_1175));

assign sub_ln703_2_fu_652_p2 = ($signed(sext_ln1265_fu_634_p1) - $signed(centroids_x_V_load_1_reg_1189));

assign sub_ln703_30_fu_920_p2 = ($signed(sext_ln1265_14_fu_902_p1) - $signed(centroids_x_V_load_1_reg_1189));

assign sub_ln703_31_fu_925_p2 = ($signed(sext_ln1265_15_fu_911_p1) - $signed(centroids_y_V_load_1_reg_1203));

assign sub_ln703_32_fu_964_p2 = ($signed(sext_ln1265_16_fu_960_p1) - $signed(centroids_x_V_load_reg_1161));

assign sub_ln703_33_fu_973_p2 = ($signed(sext_ln1265_17_fu_969_p1) - $signed(centroids_y_V_load_reg_1175));

assign sub_ln703_34_fu_978_p2 = ($signed(sext_ln1265_16_fu_960_p1) - $signed(centroids_x_V_load_1_reg_1189));

assign sub_ln703_35_fu_983_p2 = ($signed(sext_ln1265_17_fu_969_p1) - $signed(centroids_y_V_load_1_reg_1203));

assign sub_ln703_36_fu_992_p2 = ($signed(sext_ln1265_18_fu_988_p1) - $signed(centroids_x_V_load_reg_1161));

assign sub_ln703_37_fu_1001_p2 = ($signed(sext_ln1265_19_fu_997_p1) - $signed(centroids_y_V_load_reg_1175));

assign sub_ln703_38_fu_1006_p2 = ($signed(sext_ln1265_18_fu_988_p1) - $signed(centroids_x_V_load_1_reg_1189));

assign sub_ln703_39_fu_1011_p2 = ($signed(sext_ln1265_19_fu_997_p1) - $signed(centroids_y_V_load_1_reg_1203));

assign sub_ln703_3_fu_657_p2 = ($signed(sext_ln1265_1_fu_643_p1) - $signed(centroids_y_V_load_1_reg_1203));

assign sub_ln703_4_fu_666_p2 = ($signed(sext_ln1265_2_fu_662_p1) - $signed(centroids_x_V_load_reg_1161));

assign sub_ln703_5_fu_675_p2 = ($signed(sext_ln1265_3_fu_671_p1) - $signed(centroids_y_V_load_reg_1175));

assign sub_ln703_6_fu_680_p2 = ($signed(sext_ln1265_2_fu_662_p1) - $signed(centroids_x_V_load_1_reg_1189));

assign sub_ln703_7_fu_685_p2 = ($signed(sext_ln1265_3_fu_671_p1) - $signed(centroids_y_V_load_1_reg_1203));

assign sub_ln703_8_fu_718_p2 = ($signed(sext_ln1265_4_fu_714_p1) - $signed(centroids_x_V_load_reg_1161));

assign sub_ln703_9_fu_727_p2 = ($signed(sext_ln1265_5_fu_723_p1) - $signed(centroids_y_V_load_reg_1175));

assign sub_ln703_fu_638_p2 = ($signed(sext_ln1265_fu_634_p1) - $signed(centroids_x_V_load_reg_1161));

assign trunc_ln728_fu_592_p1 = p_Val2_1_reg_416[0:0];

assign zext_ln1148_fu_1057_p1 = tmp_V_reg_486;

assign zext_ln20_fu_586_p1 = p_Val2_1_reg_416;

assign zext_ln31_1_fu_628_p1 = or_ln30_fu_622_p2;

assign zext_ln31_2_fu_696_p1 = add_ln30_fu_690_p2;

assign zext_ln31_3_fu_708_p1 = add_ln30_1_fu_702_p2;

assign zext_ln31_4_fu_776_p1 = add_ln30_2_fu_770_p2;

assign zext_ln31_5_fu_788_p1 = add_ln30_3_fu_782_p2;

assign zext_ln31_6_fu_856_p1 = add_ln30_4_fu_850_p2;

assign zext_ln31_7_fu_868_p1 = add_ln30_5_fu_862_p2;

assign zext_ln31_8_fu_936_p1 = add_ln30_6_fu_930_p2;

assign zext_ln31_9_fu_948_p1 = add_ln30_7_fu_942_p2;

assign zext_ln31_fu_616_p1 = i_1_0_reg_427;

assign zext_ln50_1_fu_1077_p1 = data_cluster_id_q0;

assign zext_ln50_fu_1040_p1 = j_1_reg_475;

assign zext_ln58_fu_1137_p1 = i_2_reg_439;

assign zext_ln728_fu_604_p1 = shl_ln_fu_596_p3;

always @ (posedge ap_clk) begin
    zext_ln31_reg_1220[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_1_reg_1235[0] <= 1'b1;
    zext_ln31_1_reg_1235[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_2_reg_1290[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_3_reg_1305[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_4_reg_1370[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_5_reg_1385[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_6_reg_1450[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_7_reg_1465[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_8_reg_1530[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln31_9_reg_1545[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //kmeans
